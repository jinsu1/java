/*
 * This source file was generated by the Gradle 'init' task
 */
package kr.jinsu.prepared_statement_ex;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Scanner;

import kr.jinsu.helpers.DBHelper;

public class App03 {
    public static void main(String[] args) {
        //조회할 교수 이름 입력받기
        Scanner scanner = new Scanner(System.in);
        
        System.out.print("교수 이름: ");
        String pname = scanner.nextLine();

        scanner.close();

        /** SQL구문 정의하기 */
        // department 테이블에 컴퓨터정보과를 추가하기 위한 SQL의 템플릿
        // deptno 컬럼은 auto_increment 이므로 insert에서 명시하지 않아도 된다.
        String sql = "select profno, name, userid, position, sal, "
                + "hiredate, comm, deptno from professor "
                + "where name like concat('%', ? , '%')";

        Connection conn = DBHelper.getInstance().open();

        // SLQ문의 템플릿을 사용하여 쿼리 실행을 준비하는 객체
        PreparedStatement pstmt = null;

        ResultSet rs = null;

        try {
            // pstmt 객체 할당
            pstmt = conn.prepareStatement(sql);

            // SQL문의 ? 자리에 데이터를 바인딩
            pstmt.setString(1, pname);

            // SQL문 실행하기 ==> 결과 행 리턴됨 ( 주의 : 파라미터 없음)
            rs = pstmt.executeQuery();

            while(rs.next()) {
                int profNo = rs.getInt("profNo");
                String name = rs.getString("name");
                String userId = rs.getString("userid");
                String position = rs.getString("position");
                int sal = rs.getInt("sal");
                String hiredate = rs.getString("hiredate");
                int comm = rs.getInt("comm");
                int deptno = rs.getInt("deptno");

                System.out.printf("교수번호: %d\n", profNo);
                System.out.printf("이름: %s\n", name);
                System.out.printf("아이디: %s\n", userId);
                System.out.printf("직급: %s\n", position);
                System.out.printf("급여: %d\n", sal);
                System.out.printf("입사일: %s\n", hiredate);
                System.out.printf("보직수당: %d\n", comm);
                System.out.printf("학과번호: %d\n", deptno);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            //SQL을 수행하는 과정에서 생성한 객체는 반드시 생성 역순으로 닫아야 함
            if(rs != null) {
                //객체 닫기
                try {
                    rs.close();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            } 

            if (pstmt != null) {
                try {
                    pstmt.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
        DBHelper.getInstance().close();
    }
}
